version: '3.8'
services:
  appointmed-web-app:
    container_name: nginx
    build:
      context: ./spa
      args:
        - VITE_API_URL=${VITE_API_URL}
        - VITE_KEYCLOAK_URL=${VITE_KEYCLOAK_URL}
        - VITE_GOOGLE_API_KEY=${VITE_GOOGLE_API_KEY}
        - VITE_KEYCLOAK_REALM=${VITE_KEYCLOAK_REALM}
        - VITE_KEYCLOAK_CLIENT_ID=${VITE_KEYCLOAK_CLIENT_ID}
    volumes:
      - ./spa/certs:/etc/nginx/certs
      - ./spa/logs:/var/log/nginx/
    ports:
      - "80:80"
      - "443:443"  # Expose port 443 for HTTPS
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    networks:
       service-network:

  certbot:
    image: certbot/certbot
    volumes:
      - ./spa/certs:/etc/letsencrypt
    command: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    depends_on:
      - appointmed-web-app

  appointmed-api: 
    container_name: api
    restart: unless-stopped
    build:
      context: ./api/appointmed
      args:
        - VAULT_TOKEN=${VAULT_DEV_ROOT_TOKEN_ID}
        - VAULT_URL=${VAULT_URL}
        - KEYCLOAK_URL=${KEYCLOAK_URL}
        - KEYCLOAK_APPOINTMED_REALM=${KEYCLOAK_APPOINTMED_REALM}
        - KEYCLOAK_APPOINTMED_CLIENTID=${KEYCLOAK_APPOINTMED_CLIENTID}
        - MONGODB_HOST=${MONGODB_HOST}
        - MONGODB_PORT=${MONGODB_PORT}
        - MONGODB_DATABASE=${MONGODB_DATABASE}
        - SMTP_HOST=${SMTP_HOST}
        - SMTP_PORT=${SMTP_PORT}
        - SMTP_USERNAME=${SMTP_USERNAME}
        - GOOGLE_OAUTH2_CLIENTID=${GOOGLE_OAUTH2_CLIENTID}
    ports:
      - "9080:8080"
    networks:
       api-network:
       auth-api-network:
       service-network:
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
  
  keycloak:
      container_name: keycloak
      image: quay.io/keycloak/keycloak:23.0.1
      environment:
        KC_DB: postgres
        KC_DB_URL: jdbc:postgresql://postgres-keycloak/${KEYCLOAK_DB_DATABASE}
        KC_DB_USERNAME: ${KEYCLOAK_DB_USERNAME}
        KC_DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
        KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
        KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_PASSWORD}
        KC_HOSTNAME_STRICT: 'false'
        KC_HOSTNAME_STRICT_HTTPS: 'false'
        KC_METRICS_ENABLED: 'true'
        KC_FEATURES: token-exchange
        KC_HTTP_ENABLED: 'true'
        # KC_HOSTNAME: 'auth.appointmed.site'
        PROXY_ADDRESS_FORWARDING: 'true'
        KC_HTTPS_CERTIFICATE_FILE: /opt/keycloak/conf/server.crt.pem
        KC_HTTPS_CERTIFICATE_KEY_FILE: /opt/keycloak/conf/server.key.pem
        KC_HOSTNAME_STRICT_BACKCHANNEL: 'false'
      volumes:
        - ./theme:/opt/keycloak/themes
        - ./server.crt.pem:/opt/keycloak/conf/server.crt.pem
        - ./server.key.pem:/opt/keycloak/conf/server.key.pem
        - .:/opt/jboss/keycloak/standalone/log
      command:
        - "start"
        - "--proxy=edge"
        - "--http-port=80"
        - "--https-port=443"
#        - "--log-level=ALL"
#        - "--log=file" 
#        - "--log-file-format=\"'%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c{3.}] (%t) %s%e%n'\" "
#        - "--log-file=/opt/jboss/keycloak/standalone/log/keycloak.log"
      ports:
        - "8080:80"
      networks:
        auth-network:
        service-network:
        auth-api-network:    
            aliases:
              - auth.appointmed.site #Required so that iss claim in jwt is consistent between springboot and frontend

  postgres-keycloak:
    container_name: postgres-keycloak
    image: postgres:latest
    environment:
      POSTGRES_DB: ${KEYCLOAK_DB_DATABASE}
      POSTGRES_USER: ${KEYCLOAK_DB_USERNAME}
      POSTGRES_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
    restart: unless-stopped
    ports:
      - "5432:5432"
    networks:
       auth-network:

  mongodb:
    container_name: mongodb-api
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_APPOINTMED_USERNAME=${MONGO_APPOINTMED_USERNAME} 
      - MONGO_APPOINTMED_PASSWORD=${MONGO_APPOINTMED_PASSWORD}   
      - MONGO_APPOINTMED_DATABASE=${MONGODB_DATABASE}
    volumes:
      - "./mongodb/:/docker-entrypoint-initdb.d/"
    command: [--auth]
    ports:
      - "27017:27017"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    networks:
       api-network:

  vault:
    container_name: vault
    image: vault:1.13.3
    environment:
      - VAULT_DEV_ROOT_TOKEN_ID=${VAULT_DEV_ROOT_TOKEN_ID}
    ports:
      - "8200:8200"
    cap_add:
      - IPC_LOCK
    networks:
       api-network:
    logging:
        driver: "json-file"
        options:
          max-size: "10m"
          max-file: "5"
networks:
  auth-network: 
  api-network: 
  auth-api-network: 
  service-network: 
